---
import LinkButton from '@components/ui/LinkButton.astro';
import GithubIcon from '@icons/GithubIcon.astro';
import JavaScriptIcon from '@icons/JavaScriptIcon.astro';
import NextJSIcon from '@icons/NextJSIcon.astro';
import NpmIcon from '@icons/NpmIcon.astro';
import ReactIcon from '@icons/ReactIcon.astro';
import TailwindIcon from '@icons/TailwindIcon.astro';
import TypeScriptIcon from '@icons/TypeScriptIcon.astro';
import WebIcon from '@icons/WebIcon.astro';
import { cn } from '@lib/utils';
import type { Project, Tag } from '@models/project';

const TAGS: Record<string, Tag> = {
  NEXT: {
    name: 'Next.js',
    class: 'bg-black text-white',
    icon: NextJSIcon,
  },
  TAILWIND: {
    name: 'Tailwind CSS',
    class: 'bg-[#003159] text-white',
    icon: TailwindIcon,
  },
  REACT: {
    name: 'React',
    class: 'bg-blue-700 text-white',
    icon: ReactIcon,
  },
  JAVASCRIPT: {
    name: 'JavaScript',
    class: 'bg-amber-600 text-white',
    icon: JavaScriptIcon,
  },
  TYPESCRIPT: {
    name: 'TypeScript',
    class: 'bg-blue-900 text-white',
    icon: TypeScriptIcon,
  },
};

const PROJECTS: Project[] = [
  {
    title: 'create-javalce-app - A CLI to create projects from templates',
    description:
      'A CLI to create projects from Next.js, React, etc. templates preconfigured with my ESLint and Prettier configuration. Also, it has the possibility to use Tailwind CSS and always with TypeScript.',
    npm: 'https://www.npmjs.com/package/create-javalce-app',
    github: 'https://github.com/javalce/create-javalce-app',
    tags: [TAGS.JAVASCRIPT, TAGS.TYPESCRIPT, TAGS.NEXT, TAGS.REACT],
  },
];
---

<section class='flex flex-col gap-y-16'>
  {
    PROJECTS.map(({ title, description, tags, image, link, github, npm }) => (
      <article>
        <h3 class='mb-2 text-2xl font-semibold text-yellow-200'>{title}</h3>
        <p class='mb-4 text-pretty text-lg'>{description}</p>
        <ul class='mb-2 flex flex-row gap-x-2'>
          {tags.map((tag) => (
            <li>
              <span
                class={cn(
                  'flex gap-x-2 rounded-full px-2 py-1 text-xs',
                  tag.class,
                )}
              >
                <tag.icon class='size-4' />
                {tag.name}
              </span>
            </li>
          ))}
        </ul>
        {image && (
          <img
            loading='lazy'
            class='rounded shadow-2xl shadow-white/10'
            src={image}
            alt={`Captura de pantalla del proyecto ${image}`}
          />
        )}
        <footer class='mt-4 flex items-end justify-start gap-x-4'>
          {github && (
            <LinkButton href={github}>
              <GithubIcon class='size-4 md:size-6' />
              Ver el c√≥digo fuente
            </LinkButton>
          )}
          {link && (
            <LinkButton href={link}>
              <WebIcon class='size-4 md:size-6' />
              Ir a la web
            </LinkButton>
          )}
          {npm && (
            <LinkButton href={npm}>
              <NpmIcon class='size-4 md:size-6' />
              Ir a npm
            </LinkButton>
          )}
        </footer>
      </article>
    ))
  }
</section>
