---
const navItems = [
  {
    title: 'Experiencia',
    label: 'experience',
    url: '/#experience',
  },
  {
    title: 'Proyectos',
    label: 'projects',
    url: '/#projects',
  },
  {
    title: 'Sobre m√≠',
    label: 'about',
    url: '/#about',
  },
  {
    title: 'Contacto',
    label: 'contact',
    url: 'mailto:javalce29@gmail.com',
  },
];
---

<header class='fixed top-0 z-10 mx-auto mt-2 flex w-full items-center justify-center'>
  <nav class='flex items-center justify-center rounded-full px-3 text-sm font-medium text-gray-200'>
    {
      navItems.map(({ title, label, url }) => (
        <a
          class='relative block p-2 transition hover:text-yellow-400'
          aria-label={label}
          href={url}
        >
          {title}
        </a>
      ))
    }
  </nav>
</header>

<script>
  document.addEventListener('astro:page-load', () => {
    const sections = document.querySelectorAll('section');
    const navItems = document.querySelectorAll('header nav a');

    const callback = (entries: IntersectionObserverEntry[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute('aria-label') === entry.target.id) {
              item.classList.add('text-yellow-500');
            } else {
              item.classList.remove('text-yellow-500');
            }
          });
        }
      });
    };

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: '0px',
      threshold: 0.3,
    });

    sections.forEach((section) => {
      observer.observe(section);
    });

    document.onvisibilitychange = () => {
      if (document.visibilityState === 'hidden') {
        observer.disconnect();
      } else {
        sections.forEach((section) => {
          observer.observe(section);
        });
      }
    };
  });
</script>

<style>
  nav {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
    /* @apply bg-gray-400/50 shadow-lg ring-1 ring-white/10 backdrop-blur; */
  }

  @keyframes nav-shadown {
    to {
      --tw-ring-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width))
        var(--tw-ring-color, currentColor);
      --tw-backdrop-blur: blur(8px);

      background-color: color-mix(in oklab, var(--color-gray-400) 50%, transparent);
      box-shadow:
        var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
        var(--tw-ring-shadow), var(--tw-shadow);
      backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
        var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
        var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,)
        var(--tw-backdrop-sepia,);
    }
  }
</style>
